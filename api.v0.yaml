openapi: 3.0.0
info:
  title: Ada Markets APIs
  version: 1.0.0
paths:
  /api/v0/aggregate:
    post:
      summary: Aggregate request for selling and buying coins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregateRequest'
      responses:
        '200':
          description: Successfully processed the aggregate request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateErrorResponse'

  /api/v0/chart/history:
    post:
      summary: Get historical chart data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartDataRequest'
      responses:
        '200':
          description: Successfully retrieved historical chart data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChartDataResponse'
        '400':
          description: Invalid request

  /api/v0/coins/all:
    get:
      summary: Get all coins data
      responses:
        '200':
          description: Successfully retrieved coins data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoinsResponse'
        '400':
          description: Invalid request

components:
  schemas:
    AggregateRequest:
      type: object
      properties:
        sellCoin:
          $ref: '#/components/schemas/Asset'
        sellAmount:
          type: number
          description: Amount of the coin to sell
        buyCoin:
          $ref: '#/components/schemas/Asset'
        slippage:
          type: number
          description: Acceptable slippage for the transaction
        walletAddress:
          type: string
          description: Wallet address of the user
        additionalFees:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalFee'
      required:
        - sellCoin
        - sellAmount
        - buyCoin
        - slippage
        - walletAddress
        - additionalFees

    AggregateResponse:
      type: object
      properties:
        aggregateDetails:
          type: object
          properties:
            estimatedReceive:
              type: number
              description: Estimated amount to receive
            dexInfo:
              type: array
              items:
                $ref: '#/components/schemas/DexInfo'
        txCbor:
          type: string
          description: Transaction CBOR

    AggregateErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: number
              description: Error code
            message:
              type: string
              description: Error message
            details:
              type: string
              description: Detailed description of the error
      required:
        - error

    DexInfo:
      type: object
      properties:
        dexName:
          type: string
          description: Name of the decentralized exchange
        price:
          type: number
          description: Price of the asset
        minimumReceive:
          type: number
          description: Minimum amount to receive
        estimatedReceive:
          type: number
          description: Estimated amount to receive
        priceImpactPercent:
          type: number
          description: Price impact percentage
        swapFees:
          type: array
          items:
            $ref: '#/components/schemas/SwapFee'
        splitPercent:
          type: number
          description: Split percentage
        sellAmount:
          type: number
          description: Amount of the asset to sell

    SwapFee:
      type: object
      properties:
        id:
          type: string
          description: ID of the swap fee
        title:
          type: string
          description: Title of the swap fee
        description:
          type: string
          description: Description of the swap fee
        value:
          type: string
          format: bigint
          description: Value of the swap fee
        isReturned:
          type: boolean
          description: Whether the fee is returned

    ChartDataRequest:
      type: object
      properties:
        coinA:
          $ref: '#/components/schemas/Asset'
        coinB:
          $ref: '#/components/schemas/Asset'
        symbol:
          type: string
          description: Symbol representing the coin pair
        resolution:
          type: string
          description: Resolution of the chart data
        from:
          type: integer
          format: int64
          description: Start timestamp for the historical data
        to:
          type: integer
          format: int64
          description: End timestamp for the historical data
        countback:
          type: integer
          description: Number of data points to count back from the 'to' timestamp
      required:
        - coinA
        - coinB
        - symbol
        - resolution
        - from
        - to

    Asset:
      type: object
      properties:
        policyId:
          type: string
          description: Policy ID of the asset
        nameHex:
          type: string
          description: Name of the asset in hexadecimal
        decimals:
          type: integer
          description: Number of decimal places for the asset
      required:
        - policyId
        - nameHex
        - decimals

    AdditionalFee:
      type: object
      properties:
        title:
          type: string
          description: Title of the additional fee
        description:
          type: string
          description: Description of the additional fee
        value:
          type: string
          format: bigint
          description: Value of the additional fee
        isReturned:
          type: boolean
          description: Whether the fee is returned
      required:
        - title
        - description
        - value
        - isReturned

    ChartDataResponse:
      type: object
      properties:
        time:
          type: string
          description: Time of the data point
        open:
          type: number
          description: Opening price
        high:
          type: number
          description: Highest price
        low:
          type: number
          description: Lowest price
        close:
          type: number
          description: Closing price
      required:
        - time
        - open
        - high
        - low
        - close

    CoinsResponse:
      type: object
      properties:
        title:
          type: string
          description: Title of the coin
        project:
          type: string
          description: Project associated with the coin
        img:
          type: string
          description: Image URL of the coin
        policyId:
          type: string
          description: Policy ID of the coin
        nameHex:
          type: string
          description: Name of the coin in hexadecimal
        decimals:
          type: number
          description: Number of decimal places for the coin
        quantity:
          type: number
          description: Quantity of the coin
        category:
          type: string
          description: Category of the coin
        website:
          type: string
          description: Website of the project
        twitter:
          type: string
          description: Twitter handle of the project
        tradableCoins:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        verified:
          type: boolean
          description: Whether the coin is verified
      required:
        - title
        - project
        - img
        - policyId
        - nameHex
        - decimals
        - quantity
        - tradableCoins
